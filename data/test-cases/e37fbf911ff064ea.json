{"uid":"e37fbf911ff064ea","name":"Validate master data snapshot report for production and equipment mapping","fullName":"tests.scenarios.test_audit_portal_formulation_facility.TestAuditPortalLimits#test_validate_master_data_snapshot_report_production_equipment_mapping","historyId":"21bc65d310a5d5d8c2b3e33baedf3b9f","time":{"start":1708231528198,"stop":1708231528427,"duration":229},"description":"This test case test API to validate the master data snapshot report for productions and equipment mapping with excel file data","descriptionHtml":"<p>This test case test API to validate the master data snapshot report for productions and equipment mapping with excel file data</p>\n","status":"broken","statusMessage":"ValueError: Worksheet named 'prod-eq-mapping' not found","statusTrace":"self = <test_audit_portal_formulation_facility.TestAuditPortalLimits object at 0x0000025BB7813110>\n\n    @allure.title(\"Validate master data snapshot report for production and equipment mapping\")\n    @allure.description(\"This test case test API to validate the master data snapshot report for productions and \"\n                        \"equipment mapping with excel file data\")\n    @allure.link(\"https://app.clickup.com/t/85zt9qzh3\")\n    @pytest.mark.validate_master_data_snapshot_report_production_equipment_mapping\n    def test_validate_master_data_snapshot_report_production_equipment_mapping(self):\n        data = {}\n        mismatched_rows = []\n        assert_flag = False\n    \n        data.update({\"sheet_name\": \"ProductionEquipmentMatrix\"})\n    \n        master_data_snapshot = self.get_audit_portal.test_config_new_master_data_snapshot_report(data)[\"response\"]\n    \n        if master_data_snapshot:\n            master_data_snapshot = pd.json_normalize(master_data_snapshot)\n    \n            columns_mapping = {\"production\": \"Production\", \"equipmentEntity\": \"Equipment Entity\",\n                               \"type\": \"Type\", \"constituentEquipment\": \"Constituent Equipment\"}\n    \n>           excel_data = pd.read_excel(const.get_master_data(), sheet_name=\"prod-eq-mapping\", usecols='A:D', nrows=23)\n\ntests\\scenarios\\test_audit_portal_formulation_facility.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:486: in read_excel\n    data = io.parse(\nvenv\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1551: in parse\n    return self._reader.parse(\nvenv\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:746: in parse\n    sheet = self.get_sheet_by_name(asheetname)\nvenv\\Lib\\site-packages\\pandas\\io\\excel\\_openpyxl.py:569: in get_sheet_by_name\n    self.raise_if_bad_sheet_by_name(name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pandas.io.excel._openpyxl.OpenpyxlReader object at 0x0000025BB8543710>, name = 'prod-eq-mapping'\n\n    def raise_if_bad_sheet_by_name(self, name: str) -> None:\n        if name not in self.sheet_names:\n>           raise ValueError(f\"Worksheet named '{name}' not found\")\nE           ValueError: Worksheet named 'prod-eq-mapping' not found\n\nvenv\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:597: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708231518741,"stop":1708231519164,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708231519165,"stop":1708231520236,"duration":1071},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_master_data_snapshot_report_production_equipment_mapping"},{"name":"tag","value":"run(order=1)"},{"name":"tag","value":"audit_portal_limits"},{"name":"tag","value":"scenario"},{"name":"tag","value":"second"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_audit_portal_formulation_facility"},{"name":"subSuite","value":"TestAuditPortalLimits"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"33920-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_audit_portal_formulation_facility"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zt9qzh3","url":"https://app.clickup.com/t/85zt9qzh3","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_master_data_snapshot_report_production_equipment_mapping","scenario","run(order=1)","audit_portal_limits","second"]},"source":"e37fbf911ff064ea.json","parameterValues":[]}