{"uid":"a514321a4ed621a6","name":"Test SAL of Production(Intermediate) for Default Criteria in API Facility","fullName":"tests.scenarios.test_limit_productions.TestLimitOnProduction#test_validate_intermediate_production_sal","historyId":"7c52f809e18a8642905683259f27197a","time":{"start":1708235038315,"stop":1708235038731,"duration":416},"description":"This test case tests SAL when Default Criteria in Policy is selected for each Equipment mapped to Production(Intermediate) in API Facility","descriptionHtml":"<p>This test case tests SAL when Default Criteria in Policy is selected for each Equipment mapped to Production(Intermediate) in API Facility</p>\n","status":"failed","statusMessage":"AssertionError: EQM-5 0.0031429 Not Equal 0.00714","statusTrace":"self = <test_limit_productions.TestLimitOnProduction object at 0x000001EBDF28BAD0>\n\n    @allure.title(\"Test SAL of Production(Intermediate) for Default Criteria in API Facility\")\n    @allure.description(\"This test case tests SAL when Default Criteria in Policy is selected\"\n                        \" for each Equipment mapped to Production(Intermediate) in API Facility\")\n    @allure.link(\"https://app.clickup.com/t/2rbyuy9\")\n    @pytest.mark.active\n    @pytest.mark.validate_intermediate_production_sal\n    def test_validate_intermediate_production_sal(self):\n        data = {}\n        production_id = PRODUCTION_LIST[\"intermediate_production_id\"]\n        for prod in production_id:\n            data.update({\"production\": prod})\n            sheet_name = prod.lower()\n            columns = [\"Equipment ID\", \"final_sal_mg_sqcm\"]\n            manually_calculated_limit, lowest_manually_calculated_sal = self.calculated_sal_excel(sheet_name, columns)\n            data.update({\"production\": prod})\n            sal = self.get_production.get_production_sal_each_equipment(data)\n            lowest_sal = self.get_production.get_production_lowest_sal(data)\n>           compare_sal(sal, manually_calculated_limit, columns, self.ERROR_MESSAGE)\n\ntests\\scenarios\\test_limit_productions.py:696: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutil\\common_methods.py:22: in compare_sal\n    compare(sal_application[i], n, i)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsal1 = 0.0031429, sal2 = 0.00714, error_message = 'EQM-5'\n\n    def compare(sal1, sal2, error_message):\n        if sal1 != \"#N/A\" and sal2 != \"#N/A\":\n            if sal1 < 1:\n                length = (floor(log10(sal1)) - 1)\n            else:\n                length = 15 - len(str(int(sal1)))\n            if length < 0:\n                sal1 = (round(sal1, -length + 3))\n                sal2 = (round(sal2, -length + 3))\n                tolerance = calculate_tolerance(sal1)\n>               assert abs(sal1 - sal2) < tolerance, error_message + f\" {sal1} Not Equal {sal2}\"\nE               AssertionError: EQM-5 0.0031429 Not Equal 0.00714\n\nutil\\common_methods.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708234851959,"stop":1708234852413,"duration":454},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708234852413,"stop":1708234853261,"duration":848},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"This method will setup the cleaning limit policy for actives","time":{"start":1708235033384,"stop":1708235033983,"duration":599},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_intermediate_production_sal"},{"name":"tag","value":"active"},{"name":"tag","value":"production_limits"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_limit_productions"},{"name":"subSuite","value":"TestLimitOnProduction"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"22000-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_limit_productions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/2rbyuy9","url":"https://app.clickup.com/t/2rbyuy9","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario","validate_intermediate_production_sal","active","production_limits"]},"source":"a514321a4ed621a6.json","parameterValues":[]}