{"uid":"4d47a26e044469de","name":"Test ProductWise Dosage SAL of Productions on Equipments","fullName":"tests.scenarios.test_limit_equipments.TestLimitsOnEquipments#test_validate_formulation_equipment_sal_productwise_dosage","historyId":"a96f6a664d5158a39631ea8bcfe14a06","time":{"start":1708236870414,"stop":1708236870414,"duration":0},"description":"This test case tests Production wise SAL when Dosage Criteria in Policy is selected for all production mapped to Equipment","descriptionHtml":"<p>This test case tests Production wise SAL when Dosage Criteria in Policy is selected for all production mapped to Equipment</p>\n","status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'","statusTrace":"self = <test_limit_equipments.TestLimitsOnEquipments object at 0x000001ED13555690>\n\n    @allure.title(\"This method will setup cleaning limit policy\")\n    @allure.description(\"This method will setup cleaning limit policy for actives and intermediates and will be \"\n                        \"execute once before all test cases\")\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def setup_equipment_limits(self):\n        global EQUIPMENT_LIST\n>       EQUIPMENT_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", [\"equipment_id\"])\n\ntests\\scenarios\\test_limit_equipments.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutil\\excel.py:62: in read_excel_columns\n    sheet = wb1[sheet_name]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <openpyxl.workbook.workbook.Workbook object at 0x000001ED1401C8D0>, key = 'config'\n\n    def __getitem__(self, key):\n        \"\"\"Returns a worksheet by its name.\n    \n        :param name: the name of the worksheet to look for\n        :type name: string\n    \n        \"\"\"\n        for sheet in self.worksheets + self.chartsheets:\n            if sheet.title == key:\n                return sheet\n>       raise KeyError(\"Worksheet {0} does not exist.\".format(key))\nE       KeyError: 'Worksheet config does not exist.'\n\nvenv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:287: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708236865235,"stop":1708236865545,"duration":310},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708236865545,"stop":1708236866420,"duration":875},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"This method will setup cleaning limit policy","time":{"start":1708236870322,"stop":1708236870357,"duration":35},"status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'\n","statusTrace":"  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 908, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\scenarios\\test_limit_equipments.py\", line 46, in setup_equipment_limits\n    EQUIPMENT_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", [\"equipment_id\"])\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\util\\excel.py\", line 62, in read_excel_columns\n    sheet = wb1[sheet_name]\n            ~~~^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py\", line 287, in __getitem__\n    raise KeyError(\"Worksheet {0} does not exist.\".format(key))\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_formulation_equipment_productwise_sal_dosage"},{"name":"tag","value":"formulation"},{"name":"tag","value":"equipment_limits"},{"name":"tag","value":"limits"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_limit_equipments"},{"name":"subSuite","value":"TestLimitsOnEquipments"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"29484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_limit_equipments"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/2te94wr","url":"https://app.clickup.com/t/2te94wr","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["equipment_limits","validate_formulation_equipment_productwise_sal_dosage","formulation","limits"]},"source":"4d47a26e044469de.json","parameterValues":[]}