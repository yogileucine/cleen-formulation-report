{"uid":"14549d53d7d203b","name":"Update the Equipment Group details","fullName":"tests.unit.production.test_equipment_group.TestEquipmentGroup#test_update_equipment_group_details","historyId":"8f4f685a3748ab079818d43b2c59cfff","time":{"start":1708599394841,"stop":1708599395308,"duration":467},"description":"This method is use to test API to update the equipment group details","descriptionHtml":"<p>This method is use to test API to update the equipment group details</p>\n","status":"broken","statusMessage":"KeyError: 'equipments'","statusTrace":"self = <test_equipment_group.TestEquipmentGroup object at 0x000001ADAF606FD0>, data = None\n\n    @allure.title(\"Update the Equipment Group details\")\n    @allure.description(\"This method is use to test API to update the equipment group details\")\n    @allure.link(\"https://app.clickup.com/t/8678zbf0d\")\n    @pytest.mark.update_equipment_group_details\n    def test_update_equipment_group_details(self, data=None):\n        global EQUIPMENT_GROUP, EQUIPMENT, EQUIPMENT_GROUP_DETAILS\n        equipments = self.equipments_details.test_get_equipments(data)\n        equipments = json.loads(equipments)\n        EQUIPMENT = equipments\n        equipments_group = self.equipments_group_details.test_get_equipment_group_details(data)[\"response\"]\n        equipments_group = json.loads(equipments_group)\n        EQUIPMENT_GROUP = equipments_group[\"equipmentGroups\"]\n    \n        equipment_group_id = self.get_equipment_group_id(data)\n    \n        page_number = self.equipments_details.get_page_number(data)\n        params = {\"pageNumber\": page_number, \"pageLimit\": const.PAGE_LIMIT}\n        response = Request.get(const.EQUIPMENT_GROUP + str(equipment_group_id), use_facility_url=True, params=params)\n        EQUIPMENT_GROUP_DETAILS = json.loads(response.text)\n>       payload = self.get_equipment_group_payload(data)\n\ntests\\unit\\production\\test_equipment_group.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = None\n\n    @staticmethod\n    def get_equipment_group_payload(data):\n        equipment = None\n        eq_id_list = []\n        new_eq_list = []\n>       equipments = EQUIPMENT_GROUP_DETAILS[\"equipmentGroups\"][\"equipments\"]\nE       KeyError: 'equipments'\n\ntests\\unit\\production\\test_equipment_group.py:52: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":12,"retriesStatusChange":true,"beforeStages":[{"name":"login","time":{"start":1708597483250,"stop":1708597483775,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708597483776,"stop":1708597485069,"duration":1293},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"update_equipment_group_details"},{"name":"tag","value":"equipments_group"},{"name":"tag","value":"unit"},{"name":"parentSuite","value":"tests.unit.production"},{"name":"suite","value":"test_equipment_group"},{"name":"subSuite","value":"TestEquipmentGroup"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"7692-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.production.test_equipment_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/8678zbf0d","url":"https://app.clickup.com/t/8678zbf0d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"75a5caa69170f429","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708597473153,"stop":1708597473153,"duration":0}},{"uid":"f2b4ccd1b68be62f","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708595634333,"stop":1708595634333,"duration":0}},{"uid":"9fc3be710580fc5","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708595193062,"stop":1708595193062,"duration":0}},{"uid":"3c9724a5653603cb","status":"passed","time":{"start":1708589501673,"stop":1708589501783,"duration":110}},{"uid":"eba6cc3ae33aed65","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708587510384,"stop":1708587510505,"duration":121}},{"uid":"cf853e22c81a1571","status":"failed","statusDetails":"AssertionError: {\"message\":[[\"username must match /^[\\\\w#.\\\\/-]{1,100}$/ regular expression\"]]}","time":{"start":1708586199553,"stop":1708586199553,"duration":0}},{"uid":"c10e73f3b67ca3c2","status":"passed","time":{"start":1707719036422,"stop":1707719036544,"duration":122}},{"uid":"62afcc45fb835d9","status":"failed","statusDetails":"AssertionError: {\"error\":{}}","time":{"start":1707718462455,"stop":1707718462455,"duration":0}},{"uid":"894eabbfc73ddad7","status":"failed","statusDetails":"AssertionError: {\"message\":[[\"username must match /^[\\\\w#.\\\\/-]{1,100}$/ regular expression\"]]}","time":{"start":1707718433874,"stop":1707718433874,"duration":0}},{"uid":"8807f5f3072cb8a5","status":"passed","time":{"start":1707717943160,"stop":1707717943332,"duration":172}},{"uid":"67ea5ee706606f04","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1707716775149,"stop":1707716775152,"duration":3}},{"uid":"dc83f8fc42454db9","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1707716360502,"stop":1707716360502,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["unit","equipments_group","update_equipment_group_details"]},"source":"14549d53d7d203b.json","parameterValues":[]}