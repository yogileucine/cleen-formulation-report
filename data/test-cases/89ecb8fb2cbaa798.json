{"uid":"89ecb8fb2cbaa798","name":"Setup a Facility","fullName":"tests.scenarios.test_setup_facility.TestSetupFacility#test_setup_facility","historyId":"08a61cee25ec12ea937a71a8d51c21d4","time":{"start":1708236866467,"stop":1708236866526,"duration":59},"description":"This test case setup a facility by importing data, adding worst selection criteria, making all additional test as true and submitting, approving change assessment","descriptionHtml":"<p>This test case setup a facility by importing data, adding worst selection criteria, making all additional test as true and submitting, approving change assessment</p>\n","status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'","statusTrace":"self = <test_setup_facility.TestSetupFacility object at 0x000001ED1394BA90>\n\n    @allure.title(\"Setup a Facility\")\n    @allure.description(\"This test case setup a facility by importing data, adding worst selection \"\n                        \"criteria, making all additional test as true and submitting, approving change assessment\")\n    @allure.link(\"https://app.clickup.com/t/2uw2y2m\")\n    @pytest.mark.setup_facility\n    def test_setup_facility(self):\n        if const.FACILITY_TYPE != \"api\":\n            self.criteria_selection.test_update_selection_criteria(None)\n>       self.master_data_import.test_import_master_data()\n\ntests\\scenarios\\test_setup_facility.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\migrate_data\\test_file_import.py:29: in test_import_master_data\n    excel_data = Excel.read_excel_columns(const.get_master_data(), \"config\", columns)\nutil\\excel.py:62: in read_excel_columns\n    sheet = wb1[sheet_name]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <openpyxl.workbook.workbook.Workbook object at 0x000001ED13A99F50>, key = 'config'\n\n    def __getitem__(self, key):\n        \"\"\"Returns a worksheet by its name.\n    \n        :param name: the name of the worksheet to look for\n        :type name: string\n    \n        \"\"\"\n        for sheet in self.worksheets + self.chartsheets:\n            if sheet.title == key:\n                return sheet\n>       raise KeyError(\"Worksheet {0} does not exist.\".format(key))\nE       KeyError: 'Worksheet config does not exist.'\n\nvenv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:287: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708236865235,"stop":1708236865545,"duration":310},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708236865545,"stop":1708236866420,"duration":875},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"setup_facility"},{"name":"tag","value":"order('first')"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_setup_facility"},{"name":"subSuite","value":"TestSetupFacility"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"29484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_setup_facility"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/2uw2y2m","url":"https://app.clickup.com/t/2uw2y2m","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario","setup_facility","order('first')"]},"source":"89ecb8fb2cbaa798.json","parameterValues":[]}