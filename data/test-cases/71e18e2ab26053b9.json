{"uid":"71e18e2ab26053b9","name":"Validate the sample limits of microbial residue verification for direct indirect custom","fullName":"tests.scenarios.test_multi_prodcution_protocol.TestMultiProductionProtocol#test_validate_microbial_residue_sample_limits_direct_indirect_custom","historyId":"55ec5520c12139baac7e5acc0e41ea7b","time":{"start":1709039533962,"stop":1709039536764,"duration":2802},"description":"This test case tests API to Create Protocol for microbial residue verification and validate the sample limits when select custom for direct and indirect","descriptionHtml":"<p>This test case tests API to Create Protocol for microbial residue verification and validate the sample limits when select custom for direct and indirect</p>\n","status":"failed","statusMessage":"AssertionError: {\"error\":{\"errName\":\"AcceptanceCriteriaForAllSelectedEquipment\",\"where\":{\"domain\":\"OnDemandProtocol\",\"action\":\"Modify\"},\"name\":\"Protocol\",\"message\":\"Acceptance Criteria needs to be defined for all selected Equipment\",\"action\":\"Modify\",\"domain\":\"OnDemandProtocol\"}}","statusTrace":"self = <test_multi_prodcution_protocol.TestMultiProductionProtocol object at 0x000002CCA36382D0>\n\n    @allure.title(\"Validate the sample limits of microbial residue verification for direct indirect custom\")\n    @allure.description(\"This test case tests API to Create Protocol for microbial residue verification and validate \"\n                        \"the sample limits when select custom for direct and indirect\")\n    @allure.link(\"https://app.clickup.com/t/86cumc7f2\")\n    @pytest.mark.formulation  # bop = based on policy\n    @pytest.mark.validate_microbial_residue_sample_limits_direct_indirect_custom\n    def test_validate_microbial_residue_sample_limits_direct_indirect_custom(self):\n>       data = self.test_create_microbial_residue_verification_protocol_direct_indirect_custom_non_split()\n\ntests\\scenarios\\test_multi_prodcution_protocol.py:5149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\scenarios\\test_multi_prodcution_protocol.py:3465: in test_create_microbial_residue_verification_protocol_direct_indirect_custom_non_split\n    updated_data = self.protocol_microbial.update_microbial_residue_verification_protocol(data)[\"response\"]\ntests\\unit\\protocols\\protocol_microbial_residue_verification.py:316: in update_microbial_residue_verification_protocol\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [400]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: {\"error\":{\"errName\":\"AcceptanceCriteriaForAllSelectedEquipment\",\"where\":{\"domain\":\"OnDemandProtocol\",\"action\":\"Modify\"},\"name\":\"Protocol\",\"message\":\"Acceptance Criteria needs to be defined for all selected Equipment\",\"action\":\"Modify\",\"domain\":\"OnDemandProtocol\"}}\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"login","time":{"start":1709038682534,"stop":1709038683052,"duration":518},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1709038683052,"stop":1709038683859,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_microbial_residue_sample_limits_direct_indirect_custom"},{"name":"tag","value":"formulation"},{"name":"tag","value":"multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_prodcution_protocol"},{"name":"subSuite","value":"TestMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"28604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_prodcution_protocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cumc7f2","url":"https://app.clickup.com/t/86cumc7f2","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"32fa761dda9620f6","status":"broken","statusDetails":"AttributeError: 'ProtocolMicrobialAcceptanceCriteria' object has no attribute 'compare_samples_swab_rinse_surface_area_microbial'","time":{"start":1708873661616,"stop":1708873668926,"duration":7310}},{"uid":"15de07f006dd150c","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708872961979,"stop":1708872961979,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["multi_production_protocol","validate_microbial_residue_sample_limits_direct_indirect_custom","scenario","formulation"]},"source":"71e18e2ab26053b9.json","parameterValues":[]}