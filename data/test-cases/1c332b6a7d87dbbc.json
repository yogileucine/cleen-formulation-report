{"uid":"1c332b6a7d87dbbc","name":"Create Protocol for microbial residue verification for split","fullName":"tests.scenarios.test_multi_prodcution_protocol.TestMultiProductionProtocol#test_create_protocol_microbial_direct_indirect_fungal_bop_bacterial_custom","historyId":"ab6907df697b1271623895819f05be1b","time":{"start":1707799372452,"stop":1707799372452,"duration":0},"description":"This test case tests API to Create Protocol microbial residue verification for split when select based on policy for fungal and custom for bacterial of direct and based on policy for fungal and custom for bacterial indirect","descriptionHtml":"<p>This test case tests API to Create Protocol microbial residue verification for split when select based on policy for fungal and custom for bacterial of direct and based on policy for fungal and custom for bacterial indirect</p>\n","status":"failed","statusMessage":"AssertionError: 419","statusTrace":"request = <SubRequest 'login' for <Function test_setup_facility>>\n\n    @pytest.fixture(scope='session', autouse=True)\n    def login(request):\n        Env.get_data()\n        env = request.config.getoption(\"--env\")\n        const.ENV = env\n        url = Env.get_login_url(env)\n        payload = {\n            \"username\": Env.get_env_data(\"ADMIN_USERNAME\"),\n            \"password\": Env.get_env_data(\"ADMIN_PASSWORD\")\n        }\n        response = Request.post(data=payload, url=url)\n>       status_200(response)\n\ntests\\conftest.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [419]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: 419\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1707799370243,"stop":1707799370490,"duration":247},"status":"failed","statusMessage":"AssertionError: 419\n","statusTrace":"  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 908, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\conftest.py\", line 70, in login\n    status_200(response)\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\util\\validate_response.py\", line 3, in status_200\n    assert response.status_code == 200, response.text\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"create_protocol_microbial_direct_indirect_fungal_bop_bacterial_custom"},{"name":"tag","value":"formulation"},{"name":"tag","value":"multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_prodcution_protocol"},{"name":"subSuite","value":"TestMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"8248-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_prodcution_protocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuhb6jy","url":"https://app.clickup.com/t/86cuhb6jy","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["create_protocol_microbial_direct_indirect_fungal_bop_bacterial_custom","multi_production_protocol","scenario","formulation"]},"source":"1c332b6a7d87dbbc.json","parameterValues":[]}