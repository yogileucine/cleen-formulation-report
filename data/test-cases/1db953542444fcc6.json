{"uid":"1db953542444fcc6","name":"Test Nitrosamine SAL","fullName":"tests.scenarios.test_nitrosamine_limits.TestNitrosamineLimit#test_validate_nitrosamine_sal_upper_limit_mg_sqm","historyId":"6c847eb3735c3d51e49f72b6a093f846","time":{"start":1707816388704,"stop":1707816388704,"duration":0},"description":"This test case test the Nitrosamine SAL from list of production when upper limit  for surface area is selected & default surface area is sqm","descriptionHtml":"<p>This test case test the Nitrosamine SAL from list of production when upper limit  for surface area is selected &amp; default surface area is sqm</p>\n","status":"failed","statusMessage":"AssertionError: 419","statusTrace":"self = <test_nitrosamine_limits.TestNitrosamineLimit object at 0x0000029E4B9CB450>\n\n    @allure.title(\"This method will setup the default unit\")\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def setup_nitrosamine_policy(self):\n        global PRODUCTION_LIST, PRODUCTION_ID\n        data = {}\n        columns = [\"default_unit_name\", \"default_unit\", \"variable_name\", \"variable_value\"]\n        columns_id = [\"production_id\", \"api_production_id\", \"intermediate_production_id\"]\n        PRODUCTION_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", columns_id)\n    \n        excel_data = Excel.read_excel_columns(const.get_master_data(), \"config\", columns)\n        default_unit_name = excel_data[\"default_unit_name\"]\n        default_unit = excel_data[\"default_unit\"]\n        for (i, j) in zip(default_unit_name, default_unit):\n            data.update({\"default_unit_name\": i})\n            data.update({\"default_unit\": j})\n>           self.update_default_unit.test_update_default_unit(data)\n\ntests\\scenarios\\test_nitrosamine_limits.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\settings\\test_default_unit.py:77: in test_update_default_unit\n    defaults_unit = self.test_get_default_unit(data)[\"response\"]\ntests\\unit\\settings\\test_default_unit.py:61: in test_get_default_unit\n    defaults_units = self.test_get_default_units()[\"response\"]\ntests\\unit\\settings\\test_default_unit.py:51: in test_get_default_units\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [419]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: 419\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1707815921869,"stop":1707815922230,"duration":361},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1707815922230,"stop":1707815923021,"duration":791},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"This method will setup the default unit","time":{"start":1707816388151,"stop":1707816388524,"duration":373},"status":"failed","statusMessage":"AssertionError: 419\n","statusTrace":"  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 908, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\scenarios\\test_nitrosamine_limits.py\", line 48, in setup_nitrosamine_policy\n    self.update_default_unit.test_update_default_unit(data)\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\unit\\settings\\test_default_unit.py\", line 77, in test_update_default_unit\n    defaults_unit = self.test_get_default_unit(data)[\"response\"]\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\unit\\settings\\test_default_unit.py\", line 61, in test_get_default_unit\n    defaults_units = self.test_get_default_units()[\"response\"]\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\unit\\settings\\test_default_unit.py\", line 51, in test_get_default_units\n    status_200(response)\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\util\\validate_response.py\", line 3, in status_200\n    assert response.status_code == 200, response.text\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_nitrosamine_sal_upper_limit_mg_sqm"},{"name":"tag","value":"nitrosamine_sal"},{"name":"tag","value":"production_nitrosamine_sal"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_nitrosamine_limits"},{"name":"subSuite","value":"TestNitrosamineLimit"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"32012-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_nitrosamine_limits"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86ctyk78h","url":"https://app.clickup.com/t/86ctyk78h","type":"link"},{"name":"https://app.clickup.com/t/86ctyk77b","url":"https://app.clickup.com/t/86ctyk77b","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_nitrosamine_sal_upper_limit_mg_sqm","nitrosamine_sal","production_nitrosamine_sal"]},"source":"1db953542444fcc6.json","parameterValues":[]}