{"uid":"15cee90861e1f72e","name":"Test Cleaning agent SAL","fullName":"tests.scenarios.test_cleaning_agent_limit.TestCleaningAgentLimit#test_validate_cleaning_agent_sal_global_recovery_mg_sqm","historyId":"36be2b777bcf9566e5a675b288c13b79","time":{"start":1708236870058,"stop":1708236870058,"duration":0},"description":"This test case test the cleaning agent from list of equipment sal when global recovery percentage for all criteria (toxicity,default ARL) criteria is selected and sal unit is mg & default surface area is sqm","descriptionHtml":"<p>This test case test the cleaning agent from list of equipment sal when global recovery percentage for all criteria (toxicity,default ARL) criteria is selected and sal unit is mg &amp; default surface area is sqm</p>\n","status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'","statusTrace":"self = <test_cleaning_agent_limit.TestCleaningAgentLimit object at 0x000001ED11913850>\n\n    @allure.title(\"This method will setup the cleaning agent limit policy\")\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def setup_cleaning_agent(self):\n        global EQUIPMENT_LIST, EQUIPMENT_ID\n        data = {}\n        columns = [\"default_unit_name\", \"default_unit\", \"formulation_default_arl\", \"variable_name\", \"variable_value\"]\n        columns_eq = [\"equipment_id\"]\n>       EQUIPMENT_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", columns_eq)\n\ntests\\scenarios\\test_cleaning_agent_limit.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutil\\excel.py:62: in read_excel_columns\n    sheet = wb1[sheet_name]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <openpyxl.workbook.workbook.Workbook object at 0x000001ED1440B090>, key = 'config'\n\n    def __getitem__(self, key):\n        \"\"\"Returns a worksheet by its name.\n    \n        :param name: the name of the worksheet to look for\n        :type name: string\n    \n        \"\"\"\n        for sheet in self.worksheets + self.chartsheets:\n            if sheet.title == key:\n                return sheet\n>       raise KeyError(\"Worksheet {0} does not exist.\".format(key))\nE       KeyError: 'Worksheet config does not exist.'\n\nvenv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:287: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708236865235,"stop":1708236865545,"duration":310},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708236865545,"stop":1708236866420,"duration":875},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"This method will setup the cleaning agent limit policy","time":{"start":1708236869672,"stop":1708236869695,"duration":23},"status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'\n","statusTrace":"  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 908, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\scenarios\\test_cleaning_agent_limit.py\", line 48, in setup_cleaning_agent\n    EQUIPMENT_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", columns_eq)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\util\\excel.py\", line 62, in read_excel_columns\n    sheet = wb1[sheet_name]\n            ~~~^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py\", line 287, in __getitem__\n    raise KeyError(\"Worksheet {0} does not exist.\".format(key))\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_cleaning_agent_sal_global_recovery_mg_sqm"},{"name":"tag","value":"cleaning_agent_sal"},{"name":"tag","value":"cleaning_agent_limits"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_cleaning_agent_limit"},{"name":"subSuite","value":"TestCleaningAgentLimit"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"29484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_cleaning_agent_limit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86ctwpddf","url":"https://app.clickup.com/t/86ctwpddf","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_cleaning_agent_sal_global_recovery_mg_sqm","cleaning_agent_sal","cleaning_agent_limits"]},"source":"15cee90861e1f72e.json","parameterValues":[]}