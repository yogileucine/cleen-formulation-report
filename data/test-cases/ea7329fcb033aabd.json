{"uid":"ea7329fcb033aabd","name":"Create Protocol and select based on policy for Endotoxin residue verification","fullName":"tests.scenarios.test_multi_prodcution_protocol.TestMultiProductionProtocol#test_create_protocol_endotoxin_residue_verification_direct_based_on_policy_indirect_custom","historyId":"6326b7d1954020cb861841543d632a21","time":{"start":1707816243975,"stop":1707816244912,"duration":937},"description":"This test case tests API to Create Protocol based on policy for endotoxin residue verification and select based on policy for direct and custom for indirect","descriptionHtml":"<p>This test case tests API to Create Protocol based on policy for endotoxin residue verification and select based on policy for direct and custom for indirect</p>\n","status":"failed","statusMessage":"AssertionError: Value from policy 9 not matching with protocol value 19","statusTrace":"self = <test_multi_prodcution_protocol.TestMultiProductionProtocol object at 0x0000029E5C48DFD0>\n\n    @allure.title(\"Create Protocol and select based on policy for Endotoxin residue verification\")\n    @allure.description(\"This test case tests API to Create Protocol based on policy for endotoxin residue \"\n                        \"verification and select based on policy for direct and custom for indirect\")\n    @allure.link(\"https://app.clickup.com/t/86cu5qh3r\")\n    @pytest.mark.formulation\n    @pytest.mark.create_protocol_endotoxin_residue_verification_direct_based_on_policy_indirect_custom\n    def test_create_protocol_endotoxin_residue_verification_direct_based_on_policy_indirect_custom(self):\n        endotoxin_data = {}\n        endotoxin_data.update(self.DEFAULT_VOLUME_ML)\n        unit = self.update_default_unit.test_get_default_unit(endotoxin_data)[\"response\"]\n        unit = json.loads(unit)[\"default_units\"][\"unit\"]\n    \n        if unit != \"ml\":\n            self.update_default_unit.test_update_default_unit(endotoxin_data)\n            self.change_assessment.test_start_cleaning_assessment(scenario=True)\n            self.change_assessment.test_submit_approve_cleaning_assessment()\n    \n        columns_prod = [\"production_id\"]\n        productions_list = Excel.read_excel_columns(const.get_master_data(), \"config\", columns_prod)\n        data = {\"production\": productions_list[\"production_id\"], \"description\": \"Automation Protocol\"}\n        protocol_detail, data = self.setup_protocol(data)\n        self.multi_protocol.PROTOCOL = json.loads(protocol_detail)\n        data.update({\"protocol_name\": None})\n        protocol_id = self.multi_protocol.get_protocol_id(data)\n        data.update({\"protocol_id\": protocol_id, \"endotoxin_verification\": True})\n        data.update({\"update_verification_protocol\": protocol_verification_payload(data)})\n        get_equipment = self.protocol_equipment.get_equipment_protocol(data)[\"response\"]\n        self.protocol_endotoxin.PROTOCOL_ENDOTOXIN_EQUIPMENT = json.loads(get_equipment)\n        self.protocol_verification.update_inspection_protocol(data)\n    \n        direct_equipments_sal = self.protocol_endotoxin.get_endotoxin_direct_details_based_on_policy(data)[\n            \"response\"]\n        self.protocol_endotoxin.DIRECT_ENDOTOXIN_EQUIPMENT = json.loads(direct_equipments_sal)\n    \n        custom_indirect_equipments_sal = self.protocol_endotoxin.get_endotoxin_indirect_details_custom(data)[\"response\"]\n    \n        self.protocol_endotoxin.CUSTOM_INDIRECT_ENDOTOXIN_EQUIPMENT = json.loads(custom_indirect_equipments_sal)\n    \n        direct_equipment = self.protocol_endotoxin.direct_endotoxin_update_policy_payload()[\"equipments\"]\n    \n        indirect_equipment = self.protocol_endotoxin.custom_indirect_endotoxin_update_policy_payload()[\"equipments\"]\n    \n        data.update({\"direct_equipment\": direct_equipment, \"indirect_equipment\": indirect_equipment,\n                     \"direct_policy\": \"policyBased\", \"indirect_policy\": \"custom\"})\n        data.update({\"update_endotoxin_residue_verification_payload\": endotoxin_residue_verification_payload(data)})\n    \n        self.protocol_endotoxin.update_endotoxin_residue_verification_protocol(data)\n>       self.protocol_endotoxin.compare_endotoxin_values(policy_type='direct')\n\ntests\\scenarios\\test_multi_prodcution_protocol.py:1647: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <unit.protocols.protocol_endotoxin_residue_verification.ProtocolEndotoxinAcceptanceCriteria object at 0x0000029E5C442F90>, policy_type = 'direct'\n\n    def compare_endotoxin_values(self, policy_type='direct'):\n        policy_value = self.get_endotoxin_values(policy_type)\n        protocol_value = self.get_protocol_endotoxin_value(policy_type)\n    \n        for protocol_key, protocol_data in protocol_value.items():\n            policy_endotoxin_value = policy_value.get('endotoxin', {}).get('value', None)\n            protocol_rinse_limit = protocol_data.get('rinseLimit', None)\n            protocol_per_unit_volume = protocol_data.get('perUnitVolume', {}).get('value', None)\n    \n            # Compare endotoxin value with protocol rinse limit\n>           assert policy_endotoxin_value == protocol_rinse_limit, (f\"Value from policy {policy_endotoxin_value} not \"\n                                                                    f\"matching with protocol value {protocol_rinse_limit}\")\nE           AssertionError: Value from policy 9 not matching with protocol value 19\n\ntests\\unit\\protocols\\protocol_endotoxin_residue_verification.py:84: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1707815921869,"stop":1707815922230,"duration":361},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1707815922230,"stop":1707815923021,"duration":791},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"create_protocol_endotoxin_residue_verification_direct_based_on_policy_indirect_custom"},{"name":"tag","value":"formulation"},{"name":"tag","value":"multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_prodcution_protocol"},{"name":"subSuite","value":"TestMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"32012-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_prodcution_protocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cu5qh3r","url":"https://app.clickup.com/t/86cu5qh3r","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["create_protocol_endotoxin_residue_verification_direct_based_on_policy_indirect_custom","multi_production_protocol","scenario","formulation"]},"source":"ea7329fcb033aabd.json","parameterValues":[]}