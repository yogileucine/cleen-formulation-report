{"uid":"7b67f3a66492b256","name":"Validate the bioburden residue verification final summary page for custom policy","fullName":"tests.scenarios.test_multi_prodcution_protocol.TestMultiProductionProtocol#test_validate_final_summary_bioburden_residue_verification_details_custom","historyId":"3960a7b0c4f3488d8e7ddff31b7e3988","time":{"start":1709039609992,"stop":1709039617466,"duration":7474},"description":"This test case tests API to Create Protocol for bioburden residue verification and validate the final summary details for custom policy","descriptionHtml":"<p>This test case tests API to Create Protocol for bioburden residue verification and validate the final summary details for custom policy</p>\n","status":"broken","statusMessage":"KeyError: 'sampleLimitsDetails'","statusTrace":"self = <test_multi_prodcution_protocol.TestMultiProductionProtocol object at 0x000002CCA363B6D0>\n\n    @allure.title(\"Validate the bioburden residue verification final summary page for custom policy\")\n    @allure.description(\"This test case tests API to Create Protocol for bioburden residue verification and \"\n                        \"validate the final summary details for custom policy\")\n    @allure.link(\"https://app.clickup.com/t/86cup9yep\")\n    @pytest.mark.formulation\n    @pytest.mark.validate_final_summary_bioburden_residue_verification_details_custom\n    def test_validate_final_summary_bioburden_residue_verification_details_custom(self):\n        data = self.test_create_protocol_bioburden_residue_verification_custom_direct_indirect()\n        no_of_runs_payload = number_of_runs_sample_limits()\n        data.update({\"no_of_runs_payload\": no_of_runs_payload})\n        self.protocol_common_method.update_protocol_residue_verification_sample_limits_run(data)\n    \n        final_summary = self.protocol_common_method.get_active_final_summary_details(data)[\"response\"]\n    \n        equipments_id = self.protocol_common_method.get_protocol_equipments_ids(data)\n        for i in equipments_id:\n            data.update({\"equipment\": i[\"equipment_id\"], \"external_id\": i[\"external_id\"],\n                         \"columns\": [\"sample id\", \"Analytical Method\", \"sampling area (sqcm)\", \"Rinse volume(ml)\",\n                                     \"rinse_limit_ppm\", \"swab_limit_ppm\"], \"sample_type\": \"Bioburden\"})\n            sample_limits = json.loads(final_summary)[\"result\"]\n            data.update({\"sample_profile\": sample_limits})\n>           self.protocol_bioburden.compare_samples_swab_rinse_sample_limits_bioburden(data)\n\ntests\\scenarios\\test_multi_prodcution_protocol.py:5410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <unit.protocols.protocol_bioburden_residue_verification.ProtocolBioburdenAcceptanceCriteria object at 0x000002CCA186B9D0>\ndata = {'add_new_protocol_payload': {'authorId': 6, 'description': 'Automation Protocol', 'externalId': 'Protocol-576T', 'nam...ling area (sqcm)', 'Rinse volume(ml)', 'rinse_limit_ppm', 'swab_limit_ppm'], 'description': 'Automation Protocol', ...}\n\n    def compare_samples_swab_rinse_sample_limits_bioburden(self, data):\n        policies = [data[\"direct_policy\"], data[\"indirect_policy\"]]  # Include the direct policy and indirect policy\n        for policy in policies:\n            if policy == \"custom\":\n                sheet_name = data[\"external_id\"] + \"_samples_custom\"\n                sample_limits = Excel.read_excel_columns_name_row_value(const.get_master_data(), sheet_name,\n                                                                        data[\"columns\"], data[\"sample_type\"])\n    \n                swab_list = [item for item in sample_limits[\"swab_limit_ppm\"] if item != '#VALUE!']\n                result_list = [item for item in sample_limits[\"rinse_limit_ppm\"] if item != '#VALUE!']\n                rinse_index = 0\n                swab_index = 0\n>               for sample_limit in data[\"sample_profile\"]['sampleLimitsDetails']:\nE               KeyError: 'sampleLimitsDetails'\n\ntests\\unit\\protocols\\protocol_bioburden_residue_verification.py:369: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"login","time":{"start":1709038682534,"stop":1709038683052,"duration":518},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1709038683052,"stop":1709038683859,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_final_summary_bioburden_residue_verification_details_custom"},{"name":"tag","value":"formulation"},{"name":"tag","value":"multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_prodcution_protocol"},{"name":"subSuite","value":"TestMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"28604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_prodcution_protocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cup9yep","url":"https://app.clickup.com/t/86cup9yep","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cb64ea55416a8da3","status":"broken","statusDetails":"AttributeError: 'ProtocolBioburdenAcceptanceCriteria' object has no attribute 'compare_samples_swab_rinse_sample_limits_bioburden_summary'","time":{"start":1708873737895,"stop":1708873746198,"duration":8303}},{"uid":"7cc3172154aa1e22","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708872962097,"stop":1708872962097,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["validate_final_summary_bioburden_residue_verification_details_custom","multi_production_protocol","scenario","formulation"]},"source":"7b67f3a66492b256.json","parameterValues":[]}