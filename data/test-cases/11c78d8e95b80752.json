{"uid":"11c78d8e95b80752","name":"Test Cleaning agent SAL","fullName":"tests.scenarios.test_cleaning_agent_limit.TestCleaningAgentLimit#test_validate_cleaning_agent_sal_all_criteria_ug_sqcm","historyId":"5d4756fab25d8ed7b954ff71435fdcb7","time":{"start":1708231639111,"stop":1708231641614,"duration":2503},"description":"This test case test the cleaning agent from list of equipment sal when all criteria is selected (toxicity,default ARL) criteria is selected and sal unit is ug","descriptionHtml":"<p>This test case test the cleaning agent from list of equipment sal when all criteria is selected (toxicity,default ARL) criteria is selected and sal unit is ug</p>\n","status":"failed","statusMessage":"AssertionError: Limit from Application and Excel are not same #N/A Not Equal 0.015625","statusTrace":"self = <test_cleaning_agent_limit.TestCleaningAgentLimit object at 0x0000025BB78D6890>\n\n    @allure.title(\"Test Cleaning agent SAL\")\n    @allure.description(\"This test case test the cleaning agent from list of equipment sal when all criteria is \"\n                        \"selected (toxicity,default ARL) criteria is selected and sal unit is ug\")\n    @allure.link(\"https://app.clickup.com/t/85zrhgq9q\")\n    @pytest.mark.cleaning_agent_sal\n    @pytest.mark.validate_cleaning_agent_sal_all_criteria_ug_sqcm\n    def test_validate_cleaning_agent_sal_all_criteria_ug_sqcm(self):\n        policy_data = {\"useToxicity\": True, \"useARL\": True, \"salMassUnit\": \"ug\"}\n        data = {}\n        get_policy = json.loads(self.update_cleaning_agent.test_get_cleaning_agent_cleaning_limit_policy())\n        get_policy = get_policy[\"policy\"]\n        sal_unit = get_policy[\"limitRepresentation\"][\"productAndEquipmentLimits\"][\"salMassUnit\"]\n        update_policy = create_cleaning_limit_policy_cleaning_agent_payload(get_policy, policy_data)\n        data.update({\"update_policy_payload\": update_policy})\n        if get_policy != update_policy[\"data\"] or sal_unit != \"ug\":\n            self.update_cleaning_agent.test_update_cleaning_agent_policy(data)\n            self.change_assessment.test_start_cleaning_assessment(scenario=True)\n            self.change_assessment.test_submit_approve_cleaning_assessment()\n    \n        equipment_id = EQUIPMENT_ID\n        for equipment in equipment_id:\n            data.update({\"equipment\": equipment})\n            sheet_name = equipment + \"_cleaning_agent\"\n            columns = [\"cleaning_agent\", \"final_sal_ug_sqcm\"]\n            manually_calculated_limit = self.calculated_sal_excel(sheet_name, columns)\n            sal = self.get_equipment.get_cleaning_agent_sal(data)\n>           compare_chemical(sal, manually_calculated_limit, columns, self.ERROR_MESSAGE)\n\ntests\\scenarios\\test_cleaning_agent_limit.py:240: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutil\\common_methods.py:35: in compare_chemical\n    compare(swab_rinse[i], v, error_message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsal1 = '#N/A', sal2 = 0.015625, error_message = 'Limit from Application and Excel are not same'\n\n    def compare(sal1, sal2, error_message):\n        if sal1 != \"#N/A\" and sal2 != \"#N/A\":\n            if sal1 < 1:\n                length = (floor(log10(sal1)) - 1)\n            else:\n                length = 15 - len(str(int(sal1)))\n            if length < 0:\n                sal1 = (round(sal1, -length + 3))\n                sal2 = (round(sal2, -length + 3))\n                tolerance = calculate_tolerance(sal1)\n                assert abs(sal1 - sal2) < tolerance, error_message + f\" {sal1} Not Equal {sal2}\"\n            else:\n                sal1 = round(sal1, 3)\n                sal2 = round(sal2, 3)\n                tolerance = calculate_tolerance(sal1)\n                assert abs(sal1 - sal2) < tolerance, error_message + \" \" + str(sal1) + \" Not Equal \" + str(sal2)\n        else:\n>           assert sal1 == sal2, error_message + \" \" + str(sal1) + \" Not Equal \" + str(sal2)\nE           AssertionError: Limit from Application and Excel are not same #N/A Not Equal 0.015625\n\nutil\\common_methods.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708231518741,"stop":1708231519164,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708231519165,"stop":1708231520236,"duration":1071},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"This method will setup the cleaning agent limit policy","time":{"start":1708231630684,"stop":1708231631346,"duration":662},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_cleaning_agent_sal_all_criteria_ug_sqcm"},{"name":"tag","value":"cleaning_agent_sal"},{"name":"tag","value":"cleaning_agent_limits"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_cleaning_agent_limit"},{"name":"subSuite","value":"TestCleaningAgentLimit"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"33920-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_cleaning_agent_limit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zrhgq9q","url":"https://app.clickup.com/t/85zrhgq9q","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_cleaning_agent_sal_all_criteria_ug_sqcm","cleaning_agent_sal","cleaning_agent_limits"]},"source":"11c78d8e95b80752.json","parameterValues":[]}