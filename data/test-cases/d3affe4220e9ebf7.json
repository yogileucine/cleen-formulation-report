{"uid":"d3affe4220e9ebf7","name":"Valdate the sample limits of active residue verification","fullName":"tests.scenarios.test_multi_prodcution_protocol.TestMultiProductionProtocol#test_validate_active_residue_sample_limits_direct_indirect_bop","historyId":"983eb8d7203cb962ebda9b41a1fb63a2","time":{"start":1708587192566,"stop":1708587201853,"duration":9287},"description":"This test case tests API to Create Protocol for active residue verification and validate the sample limits when select based on policy for both direct and indirect","descriptionHtml":"<p>This test case tests API to Create Protocol for active residue verification and validate the sample limits when select based on policy for both direct and indirect</p>\n","status":"broken","statusMessage":"KeyError: 'Worksheet custom_active does not exist.'","statusTrace":"self = <test_multi_prodcution_protocol.TestMultiProductionProtocol object at 0x0000027703A2DED0>\n\n    @allure.title(\"Valdate the sample limits of active residue verification\")\n    @allure.description(\"This test case tests API to Create Protocol for active residue verification and validate \"\n                        \"the sample limits when select based on policy for both direct and indirect\")\n    @allure.link(\"https://app.clickup.com/t/86cumc3fw\")\n    @pytest.mark.formulation\n    @pytest.mark.validate_active_residue_sample_limits_direct_indirect_bop\n    def test_validate_active_residue_sample_limits_direct_indirect_bop(self):\n>       data = self.test_active_select_lowest_sal_on_equipment_policy_multi_production_protocol()\n\ntests\\scenarios\\test_multi_prodcution_protocol.py:4483: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\scenarios\\test_multi_prodcution_protocol.py:339: in test_active_select_lowest_sal_on_equipment_policy_multi_production_protocol\n    data.update({\"update_active_residue_verification_payload\": active_residue_verification_payload(data)})\npayload\\facility\\protocol_payload\\on_demand_protocol_payload.py:85: in active_residue_verification_payload\n    direct_limit = calculated_sal_excel(sheet_name=\"custom_active\",\npayload\\facility\\protocol_payload\\on_demand_protocol_payload.py:122: in calculated_sal_excel\n    manually_calculated_limit = Excel.read_excel_columns_name_row_value(const.get_master_data(),\nutil\\excel.py:27: in read_excel_columns_name_row_value\n    sheet = wb[sheet_name]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <openpyxl.workbook.workbook.Workbook object at 0x00000277044B5690>, key = 'custom_active'\n\n    def __getitem__(self, key):\n        \"\"\"Returns a worksheet by its name.\n    \n        :param name: the name of the worksheet to look for\n        :type name: string\n    \n        \"\"\"\n        for sheet in self.worksheets + self.chartsheets:\n            if sheet.title == key:\n                return sheet\n>       raise KeyError(\"Worksheet {0} does not exist.\".format(key))\nE       KeyError: 'Worksheet custom_active does not exist.'\n\nvenv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:287: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708586223150,"stop":1708586223921,"duration":771},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708586223921,"stop":1708586225274,"duration":1353},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_active_residue_sample_limits_direct_indirect_bop"},{"name":"tag","value":"formulation"},{"name":"tag","value":"multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_prodcution_protocol"},{"name":"subSuite","value":"TestMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"19144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_prodcution_protocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cumc3fw","url":"https://app.clickup.com/t/86cumc3fw","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["multi_production_protocol","validate_active_residue_sample_limits_direct_indirect_bop","scenario","formulation"]},"source":"d3affe4220e9ebf7.json","parameterValues":[]}