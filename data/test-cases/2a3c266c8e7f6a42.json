{"uid":"2a3c266c8e7f6a42","name":"Unarchive the Equipment Group","fullName":"tests.unit.production.test_equipment_group.TestEquipmentGroup#test_unarchive_equipment_group","historyId":"104730b5456546fe936622710b9c61f8","time":{"start":1708599395817,"stop":1708599396050,"duration":233},"description":"This method is use to test API to unarchive the equipment group","descriptionHtml":"<p>This method is use to test API to unarchive the equipment group</p>\n","status":"failed","statusMessage":"AssertionError: {\"error\":{}}","statusTrace":"self = <test_equipment_group.TestEquipmentGroup object at 0x000001ADAF620C10>, data = None\n\n    @allure.title(\"Unarchive the Equipment Group\")\n    @allure.description(\"This method is use to test API to unarchive the equipment group\")\n    @allure.link(\"https://app.clickup.com/t/8678zbfbt\")\n    @pytest.mark.unarchive_equipment_group\n    def test_unarchive_equipment_group(self, data=None):\n        global ARCHIVED_EQUIPMENT_GROUP\n        archive_equipments_group = self.test_get_archive_equipment_group_details(data)[\"response\"]\n        archive_equipments_group = json.loads(archive_equipments_group)\n        ARCHIVED_EQUIPMENT_GROUP = archive_equipments_group[\"equipmentGroups\"]\n        archive_equipment_group_id = self.get_archive_equipment_group_id(data)\n        if data is None:\n            payload = unarchive_master_data(archive_equipment_group_id)\n        else:\n            payload = data[\"unarchive_equipment_group\"]\n        url = const.EQUIPMENT_GROUP + str(archive_equipment_group_id)\n        response = Request.put(url, data=payload, use_facility_url=True)\n>       status_200(response)\n\ntests\\unit\\production\\test_equipment_group.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [500]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: {\"error\":{}}\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":12,"retriesStatusChange":true,"beforeStages":[{"name":"login","time":{"start":1708597483250,"stop":1708597483775,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708597483776,"stop":1708597485069,"duration":1293},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"unarchive_equipment_group"},{"name":"tag","value":"equipments_group"},{"name":"tag","value":"unit"},{"name":"parentSuite","value":"tests.unit.production"},{"name":"suite","value":"test_equipment_group"},{"name":"subSuite","value":"TestEquipmentGroup"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"7692-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.production.test_equipment_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/8678zbfbt","url":"https://app.clickup.com/t/8678zbfbt","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6f8a96722c22bfa4","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708597473190,"stop":1708597473191,"duration":1}},{"uid":"bc8ff0b5c90c6e08","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708595634363,"stop":1708595634363,"duration":0}},{"uid":"ca11857172d51857","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708595193095,"stop":1708595193095,"duration":0}},{"uid":"87b08c870038ea88","status":"passed","time":{"start":1708589501846,"stop":1708589501872,"duration":26}},{"uid":"b4439e05176a7e76","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1708587510801,"stop":1708587510930,"duration":129}},{"uid":"b8061cfbcd19ebb7","status":"failed","statusDetails":"AssertionError: {\"message\":[[\"username must match /^[\\\\w#.\\\\/-]{1,100}$/ regular expression\"]]}","time":{"start":1708586199583,"stop":1708586199583,"duration":0}},{"uid":"911ef0e743035ad3","status":"passed","time":{"start":1707719036617,"stop":1707719036647,"duration":30}},{"uid":"be900bd5ad7ac4be","status":"failed","statusDetails":"AssertionError: {\"error\":{}}","time":{"start":1707718462682,"stop":1707718462682,"duration":0}},{"uid":"81dc07d9ec7125d1","status":"failed","statusDetails":"AssertionError: {\"message\":[[\"username must match /^[\\\\w#.\\\\/-]{1,100}$/ regular expression\"]]}","time":{"start":1707718433921,"stop":1707718433921,"duration":0}},{"uid":"e30de053b5544a27","status":"passed","time":{"start":1707717943411,"stop":1707717943458,"duration":47}},{"uid":"9e9c2b5a2a369fd1","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1707716775200,"stop":1707716775203,"duration":3}},{"uid":"7028310cdaecc1e2","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1707716360537,"stop":1707716360537,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["unit","unarchive_equipment_group","equipments_group"]},"source":"2a3c266c8e7f6a42.json","parameterValues":[]}