{"uid":"cd48ca1c11e3524a","name":"Test Production wise SAL for All Criteria with Global Recovery Factor","fullName":"tests.scenarios.test_limit_productions.TestLimitOnProduction#test_validate_formulation_production_sal_productwise_global_recovery_all_criteria","historyId":"ba6d60786687ae75a09fdee9c4f62c88","time":{"start":1708236871148,"stop":1708236871148,"duration":0},"description":"This test case tests Production wise SAL when Global Recovery Factor when All Criteria in Policy is selected for each Equipment mapped to Production","descriptionHtml":"<p>This test case tests Production wise SAL when Global Recovery Factor when All Criteria in Policy is selected for each Equipment mapped to Production</p>\n","status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'","statusTrace":"self = <test_limit_productions.TestLimitOnProduction object at 0x000001ED137DCB90>\n\n    @allure.title(\"This method will setup the cleaning limit policy for actives\")\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def setup_production_limits(self):\n        data = {}\n        global PRODUCTION_LIST\n        columns_prod = [\"production_id\", \"api_production_id\", \"intermediate_production_id\"]\n>       PRODUCTION_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", columns_prod)\n\ntests\\scenarios\\test_limit_productions.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutil\\excel.py:62: in read_excel_columns\n    sheet = wb1[sheet_name]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <openpyxl.workbook.workbook.Workbook object at 0x000001ED147A4550>, key = 'config'\n\n    def __getitem__(self, key):\n        \"\"\"Returns a worksheet by its name.\n    \n        :param name: the name of the worksheet to look for\n        :type name: string\n    \n        \"\"\"\n        for sheet in self.worksheets + self.chartsheets:\n            if sheet.title == key:\n                return sheet\n>       raise KeyError(\"Worksheet {0} does not exist.\".format(key))\nE       KeyError: 'Worksheet config does not exist.'\n\nvenv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py:287: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708236865235,"stop":1708236865545,"duration":310},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708236865545,"stop":1708236866420,"duration":875},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"This method will setup the cleaning limit policy for actives","time":{"start":1708236870832,"stop":1708236870870,"duration":38},"status":"broken","statusMessage":"KeyError: 'Worksheet config does not exist.'\n","statusTrace":"  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 908, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\tests\\scenarios\\test_limit_productions.py\", line 45, in setup_production_limits\n    PRODUCTION_LIST = Excel.read_excel_columns(const.get_master_data(), \"config\", columns_prod)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\util\\excel.py\", line 62, in read_excel_columns\n    sheet = wb1[sheet_name]\n            ~~~^^^^^^^^^^^^\n  File \"C:\\Users\\yo339.DESKTOP-ESU2KLG\\PycharmProjects\\cleen-api-test-pm\\venv\\Lib\\site-packages\\openpyxl\\workbook\\workbook.py\", line 287, in __getitem__\n    raise KeyError(\"Worksheet {0} does not exist.\".format(key))\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"validate_formulation_production_sal_productwise_global_recovery_all_criteria"},{"name":"tag","value":"formulation"},{"name":"tag","value":"production_limits"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_limit_productions"},{"name":"subSuite","value":"TestLimitOnProduction"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"29484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_limit_productions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/2te95kw","url":"https://app.clickup.com/t/2te95kw","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_formulation_production_sal_productwise_global_recovery_all_criteria","scenario","formulation","production_limits"]},"source":"cd48ca1c11e3524a.json","parameterValues":[]}