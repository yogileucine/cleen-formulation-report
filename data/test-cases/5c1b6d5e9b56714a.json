{"uid":"5c1b6d5e9b56714a","name":"Create Protocol for bioburden residue verification for non split","fullName":"tests.scenarios.test_multi_prodcution_protocol.TestMultiProductionProtocol#test_create_protocol_direct_fungal_bop_bacterial_custom_indirect_fungal_custom_bacterial_bop","historyId":"dcd88ab308a1a09f4050cd343f21d366","time":{"start":1708231704854,"stop":1708231704854,"duration":0},"description":"This test case tests API to Create Protocol bioburden residue verification for split when select based on policy for fungal and custom for bacterial of direct, and custom for bacterial and based on policy for fungal of Indirect","descriptionHtml":"<p>This test case tests API to Create Protocol bioburden residue verification for split when select based on policy for fungal and custom for bacterial of direct, and custom for bacterial and based on policy for fungal of Indirect</p>\n","status":"skipped","statusMessage":"Skipped: test case for Formulation only","statusTrace":"('C:\\\\Users\\\\yo339.DESKTOP-ESU2KLG\\\\PycharmProjects\\\\cleen-api-test-pm\\\\tests\\\\scenarios\\\\test_multi_prodcution_protocol.py', 2518, 'Skipped: test case for Formulation only')","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708231518741,"stop":1708231519164,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708231519165,"stop":1708231520236,"duration":1071},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"create_protocol_direct_fungal_bop_bacterial_custom_indirect_fungal_custom_bacterial_bop"},{"name":"tag","value":"formulation"},{"name":"tag","value":"@pytest.mark.skip(reason='test case for Formulation only')"},{"name":"tag","value":"multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_prodcution_protocol"},{"name":"subSuite","value":"TestMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"33920-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_prodcution_protocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cubghta","url":"https://app.clickup.com/t/86cubghta","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.skip(reason='test case for Formulation only')","create_protocol_direct_fungal_bop_bacterial_custom_indirect_fungal_custom_bacterial_bop","multi_production_protocol","scenario","formulation"]},"source":"5c1b6d5e9b56714a.json","parameterValues":[]}