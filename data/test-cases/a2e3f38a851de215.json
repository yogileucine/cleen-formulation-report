{"uid":"a2e3f38a851de215","name":"Get Cleaning Limit Policy for Actives","fullName":"tests.unit.settings.cleaning_limit_policies.test_active_cleaning_limit_policy.TestActiveCleaningLimitPolicy#test_get_active_cleaning_limit_policy","historyId":"045e7c6f0ce5e14c438c132fb721cde1","time":{"start":1708242076343,"stop":1708242076343,"duration":0},"description":"This test case Gets details of Cleaning Limit Policy for Actives","descriptionHtml":"<p>This test case Gets details of Cleaning Limit Policy for Actives</p>\n","status":"failed","statusMessage":"AssertionError: 419","statusTrace":"self = <test_active_cleaning_limit_policy.TestActiveCleaningLimitPolicy object at 0x0000019E64C33E10>\n\n    @allure.title(\"Get Cleaning Limit Policy for Actives\")\n    @allure.description(\"This test case Gets details of Cleaning Limit Policy for Actives\")\n    @allure.link(\"https://app.clickup.com/t/2ngg9uj\")\n    @pytest.mark.get_active_cleaning_limit_policy\n    def test_get_active_cleaning_limit_policy(self):\n        response = Request.get(const.CLEANING_LIMIT_POLICY+const.CHEMICAL, use_facility_url=True)\n>       status_200(response)\n\ntests\\unit\\settings\\cleaning_limit_policies\\test_active_cleaning_limit_policy.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [419]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: 419\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1708241653778,"stop":1708241654178,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_facility","time":{"start":1708241654178,"stop":1708241655505,"duration":1327},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"get_active_cleaning_limit_policy"},{"name":"tag","value":"unit"},{"name":"tag","value":"active_cleaning_limit_policy"},{"name":"parentSuite","value":"tests.unit.settings.cleaning_limit_policies"},{"name":"suite","value":"test_active_cleaning_limit_policy"},{"name":"subSuite","value":"TestActiveCleaningLimitPolicy"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"12596-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.settings.cleaning_limit_policies.test_active_cleaning_limit_policy"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/2ngg9uj","url":"https://app.clickup.com/t/2ngg9uj","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["unit","get_active_cleaning_limit_policy","active_cleaning_limit_policy"]},"source":"a2e3f38a851de215.json","parameterValues":[]}